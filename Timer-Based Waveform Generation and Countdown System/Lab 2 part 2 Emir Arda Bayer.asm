ORG 0                      ; Setting starting address to 0

; for Instance, If the Input Is 15 seconds, the lcd screen should show the remaInIng   ;tIme as follows: "15 sec", "14.5 sec", "14 sec", and so forth, untIl reachIng 0.  upon ;completIon of the countdown, you should dIsplay the message "launch!" on the lcd ;screen, sIgnIfyIng that the countdown has concluded and It's tIme to launch.



MOV R4, #0 ;Initializes a register (R4) to hold the remaining countdown time (starts at 15 seconds)

ACALL	CONFIGURE_LCD   

			
BEGINNING:
	ACALL KEYBOARD	
	ACALL SEND_DATA 	
	CLR  C 
	SUBB A, #48D
	MOV R4, A

	ACALL KEYBOARD		
	CJNE A, #35D, FIRST
	SJMP BITIR

FIRST:
; If a key is pressed (A is not equal to 35D), it jumps to the FIRST label
	ACALL SEND_DATA
	CLR  C 
	SUBB A, #48D
	MOV R5, A
	MOV B, #10D
	MOV A, R4
	MUL AB
	ADD A, R5
	MOV R4, A	


SECOND:	
	ACALL KEYBOARD		
	CJNE A, #35D, SECOND

BITIR:
	ACALL ERASE


CJNE R4, #15D, POINT10
MOV DPTR, #TEXT_15
CLR A 


WRITELPP:

	MOVC A,@A+DPTR
	JZ SBONE
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP



SBONE:
ACALL COUNT
ACALL ERASE
MOV DPTR, #ONTEXT_4B

DEC R4
CLR A 

;code iterates through a series of labels (POINT10 to POINT24) based on R4

WRITELPP1:

	MOVC A,@A+DPTR
	JZ SBTWO
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP1

	
SBTWO:
ACALL COUNT


POINT10:
CJNE R4, #14D, POINT11
ACALL ERASE
MOV DPTR, #TEXT_14
DEC R4
CLR A 
;displays the remaining time using pre-defined text strings

WRITELPP2:

	MOVC A,@A+DPTR
	JZ SBTHREE
	ACALL SEND_DATA
	CLR A
	INC DPTR
	
	SJMP WRITELPP2

	
SBTHREE:
ACALL COUNT
ACALL ERASE
MOV DPTR, #ONTEXT_3B
CLR A 


WRITELPP3:

	MOVC A,@A+DPTR
	JZ SBFOUR
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP3


SBFOUR:
ACALL COUNT


POINT11:  
CJNE R4, #13D, POINT12
ACALL ERASE
MOV DPTR, #TEXT_13
DEC R4
CLR A 
;displays the remaining time using pre-defined text strings

WRITELPP4:

	MOVC A,@A+DPTR
	JZ SBFIVE
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP4

	
SBFIVE:
ACALL COUNT
ACALL ERASE
MOV DPTR, #ONTEXT_2B
CLR A 


WRITELPP5:

	MOVC A,@A+DPTR
	JZ SBSIX
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP5
	
SBSIX:
ACALL COUNT

POINT12:
CJNE R4, #12D, POINT13
ACALL ERASE
MOV DPTR, #TEXT_12
DEC R4
CLR A 


WRITELPP6:

	MOVC A,@A+DPTR
	JZ SBSEVEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP6

	
SBSEVEN:
ACALL COUNT
ACALL ERASE
MOV DPTR, #ONTEXT_1B
CLR A 


WRITELPP7:

	MOVC A,@A+DPTR
	JZ SBEIGHT
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP7

	
SBEIGHT:
ACALL COUNT


POINT13:
CJNE R4, #11D, POINT14
ACALL ERASE
MOV DPTR, #TEXT_11
DEC R4
CLR A 


WRITELPP8:

	MOVC A,@A+DPTR
	JZ SBNINE
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP8

	
SBNINE:
ACALL COUNT
ACALL ERASE
MOV DPTR, #ONB
CLR A 


WRITELPP9:

	MOVC A,@A+DPTR
	JZ SBTEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP9

	
SBTEN:
ACALL COUNT 

POINT14:
CJNE R4, #10D, POINT15
ACALL ERASE
MOV DPTR, #TEXT_10
DEC R4
CLR A 


WRITELPP10:

	MOVC A,@A+DPTR
	JZ SBELEVEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP10

	
SBELEVEN:

ACALL COUNT
ACALL ERASE
MOV DPTR, #TEXT_9B
CLR A 
WRITELPP11:

	MOVC A,@A+DPTR
	JZ SBTWELVE
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP11

	
SBTWELVE:
ACALL COUNT 


POINT15:
CJNE R4, #9D, POINT16
ACALL ERASE
;displays the remaining time using pre-defined text strings
MOV DPTR, #TEXT_9
DEC R4
CLR A 


WRITELPP12:

	MOVC A,@A+DPTR
	JZ SBTHIRTEEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP12

	
SBTHIRTEEN:
ACALL COUNT
ACALL ERASE
MOV DPTR, #TEXT_8B
CLR A 


WRITELPP13:

	MOVC A,@A+DPTR
	JZ SBFOURTEEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP13

	
SBFOURTEEN:
ACALL COUNT


POINT16:
CJNE R4, #8D, POINT17
ACALL ERASE
MOV DPTR, #TEXT_8
DEC R4
CLR A 


WRITELPP14:

	MOVC A,@A+DPTR
	JZ SBFIFTEEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP14

	
SBFIFTEEN:
ACALL COUNT
ACALL ERASE
MOV DPTR, #TEXT_7B
CLR A 


WRITELPP15:

	MOVC A,@A+DPTR
	JZ SBSIXTEEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP15

	
SBSIXTEEN:
ACALL COUNT
POINT17:
CJNE R4, #7D, POINT18
ACALL ERASE
MOV DPTR, #TEXT_7
DEC R4
CLR A 


WRITELPP16:

	MOVC A,@A+DPTR
	JZ SBSEVENTEEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP16

	
SBSEVENTEEN:
ACALL COUNT
ACALL ERASE
MOV DPTR, #TEXT_6B
CLR A 


WRITELPP17:

	MOVC A,@A+DPTR
	JZ SBEIGHTEEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP17

	
	
SBEIGHTEEN:
ACALL COUNT

POINT18:
CJNE R4, #6D, POINT19
ACALL ERASE
MOV DPTR, #TEXT_6
DEC R4
CLR A 


WRITELPP18:

	MOVC A,@A+DPTR
	JZ SBNINETEEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP18

	
SBNINETEEN:
ACALL COUNT
ACALL ERASE
MOV DPTR, #TEXT_5B
CLR A 


WRITELPP19:

	MOVC A,@A+DPTR
	JZ SBTWENTY
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP19

	
SBTWENTY:
ACALL COUNT


POINT19:
CJNE R4, #5D, POINT20
ACALL ERASE
;displays the remaining time using pre-defined text strings
MOV DPTR, #TEXT_5
DEC R4
CLR A 


WRITELPP20:

	MOVC A,@A+DPTR
	JZ SBTWENTYONE
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP20

	
SBTWENTYONE:
ACALL COUNT
ACALL ERASE
MOV DPTR, #TEXT_4B
CLR A 


WRITELPP21:

	MOVC A,@A+DPTR
	JZ SBTWENTYTWO
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP21

SBTWENTYTWO:
ACALL COUNT

POINT20:
CJNE R4, #4D, POINT21
ACALL ERASE
MOV DPTR, #TEXT_4
;displays the remaining time using pre-defined text strings
DEC R4
CLR A 


WRITELPP211:

	MOVC A,@A+DPTR
	JZ SBTWENTYTHREE
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP211

	
SBTWENTYTHREE:

ACALL COUNT
ACALL ERASE
MOV DPTR, #TEXT_3B
CLR A 


WRITELPP22:

	MOVC A,@A+DPTR
	JZ SBTWENTYFOUR
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP22

	
SBTWENTYFOUR:
ACALL COUNT


POINT21:
CJNE R4, #3D, POINT22
ACALL ERASE
MOV DPTR, #TEXT_3
;displays the remaining time using pre-defined text strings
DEC R4
CLR A 


WRITELPP23:

	MOVC A,@A+DPTR
	JZ SBTWENTYFIVE
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP23

	
SBTWENTYFIVE:
ACALL COUNT
ACALL ERASE
MOV DPTR, #TEXT_2B
CLR A 


WRITELPP24:

	MOVC A,@A+DPTR
	JZ SBTWENTYSIX
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP24

	
SBTWENTYSIX:
ACALL COUNT


POINT22:
CJNE R4, #2D, POINT23
ACALL ERASE
;displays the remaining time using pre-defined text strings
MOV DPTR, #TEXT_2
DEC R4
CLR A 


WRITELPP25:

	MOVC A,@A+DPTR
	JZ SBTWENTYSEVEN
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP25


	
SBTWENTYSEVEN:
ACALL COUNT
ACALL ERASE
MOV DPTR, #TEXT_1B
CLR A 


WRITELPP26:

	MOVC A,@A+DPTR
	JZ SBTWENTYEIGHT
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP26


	
SBTWENTYEIGHT:
ACALL COUNT



POINT23:
CJNE R4, #1D, POINT24
ACALL ERASE
;displays the remaining time using pre-defined text strings
MOV DPTR, #TEXT_1
DEC R4
CLR A 


WRITELPP27:

	MOVC A,@A+DPTR
	JZ SBTWENTYNINE
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP27

	
SBTWENTYNINE:
ACALL COUNT
MOV DPTR, #TEXT_0B
ACALL ERASE
CLR A 


WRITELPP28:

	MOVC A,@A+DPTR
	JZ SBTHIRTY
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP28

	
SBTHIRTY:
ACALL COUNT
ACALL ERASE
MOV DPTR, #TEXT_0
CLR A 


WRITELPP29:

	MOVC A,@A+DPTR
	JZ SBTHIRTYONE
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP29

	
SBTHIRTYONE:
ACALL ERASE
MOV DPTR, #TLAUNCHER
CLR A 


WRITELPP299:

	MOVC A,@A+DPTR
	JZ SBTHIRTYTWO
	ACALL SEND_DATA
	CLR A
	INC DPTR
	SJMP WRITELPP299

	
SBTHIRTYTWO:
POINT24:
FIN7: SJMP FIN7



COUNT:
MOV R7, #10D


POINT32:
DJNZ R7, POINT30
RET


POINT30:
MOV TMOD, #01H
MOV TH0, #04CH
MOV TL0, #000H
CLR TF0
SETB TR0


POINT31: JNB TF0, POINT31
SJMP POINT32

ERASE:
	MOV A, #01H  
	ACALL SEND_COMMAND
	RET

	
CONFIGURE_LCD:	
	MOV A,#38H	
	ACALL SEND_COMMAND
	MOV A,#0FH	
	ACALL SEND_COMMAND
	MOV A,#06H	
	ACALL SEND_COMMAND
	MOV A,#01H	
	ACALL SEND_COMMAND
	MOV A,#80H	
	ACALL SEND_COMMAND
	RET

SEND_COMMAND: 
	MOV P1,A		
	CLR P3.5		
	CLR P3.6	
	SETB P3.7	
	ACALL DELAY
	CLR P3.7
	RET

SEND_DATA: 
	MOV P1,A		
	SETB P3.5	
	CLR P3.6		
	SETB P3.7	
	ACALL DELAY
	CLR P3.7
	RET

DELAY:
	PUSH 0
	PUSH 1
	MOV R0,#50

DELAY_OUTER_LOOP:
	MOV R1,#100
	DJNZ R1,$
	DJNZ R0,DELAY_OUTER_LOOP
	POP 1
	POP 0
	RET

KEYBOARD: 
	MOV	P0, #0FFH	
K1:
	MOV	P2, #0	
	MOV	A, P0
	ANL	A, #00001111B
	CJNE	A, #00001111B, K1
K2:
	ACALL	DELAY
	MOV	A, P0
	ANL	A, #00001111B
	CJNE	A, #00001111B, KB_OVER
	SJMP	K2
KB_OVER:
	ACALL DELAY
	MOV	A, P0
	ANL	A, #00001111B
	CJNE	A, #00001111B, KB_OVER1
	SJMP	K2
KB_OVER1:
	MOV	P2, #11111110B
	MOV	A, P0
	ANL	A, #00001111B
	CJNE	A, #00001111B, ROW_0
	MOV	P2, #11111101B
	MOV	A, P0
	ANL	A, #00001111B
	CJNE	A, #00001111B, ROW_1
	MOV	P2, #11111011B
	MOV	A, P0
	ANL	A, #00001111B
	CJNE	A, #00001111B, ROW_2
	MOV	P2, #11110111B
	MOV	A, P0
	ANL	A, #00001111B
	CJNE	A, #00001111B, ROW_3
	LJMP	K2
	
ROW_0:
	MOV	DPTR, #KCODE0
	SJMP	KB_FIND
ROW_1:
	MOV	DPTR, #KCODE1
	SJMP	KB_FIND
ROW_2:
	MOV	DPTR, #KCODE2
	SJMP	KB_FIND
ROW_3:
	MOV	DPTR, #KCODE3
KB_FIND:
	RRC	A
	JNC	KB_MATCH
	INC	DPTR
	SJMP	KB_FIND
KB_MATCH:
	CLR	A
	MOVC	A, @A+DPTR
	RET

KCODE0:	DB	'1', '2', '3', 'A'
KCODE1:	DB	'4', '5', '6', 'B'
KCODE2:	DB	'7', '8', '9', 'C'
KCODE3:	DB	'*', '0', '#', 'D'



TEXT_15: DB '15 SEC  ', 0
TEXT_14: DB '14 SEC  ', 0
TEXT_13: DB '13 SEC  ', 0
TEXT_12: DB '12 SEC  ', 0
TEXT_11: DB '11 SEC  ', 0
TEXT_10: DB '10 SEC  ', 0
TEXT_9: DB '9 SEC   ', 0
TEXT_8: DB '8 SEC   ', 0
TEXT_7: DB '7 SEC   ', 0
TEXT_6: DB '6 SEC   ', 0
TEXT_5: DB '5 SEC   ', 0
TEXT_4: DB '4 SEC   ', 0
TEXT_3: DB '3 SEC   ', 0
TEXT_2: DB '2 SEC   ', 0
TEXT_1: DB '1 SEC   ', 0
TEXT_0: DB '0 SEC   ', 0
TLAUNCHER: DB 'LAUNCH! ', 0

ONTEXT_4B: DB '14.5 SEC', 0
ONTEXT_3B: DB '13.5 SEC', 0
ONTEXT_2B: DB '12.5 SEC', 0
ONTEXT_1B: DB '11.5 SEC', 0
ONB: DB '10.5 SEC', 0
TEXT_9B: DB '9.5 SEC ', 0
TEXT_8B: DB '8.5 SEC ', 0
TEXT_7B: DB '7.5 SEC ', 0
TEXT_6B: DB '6.5 SEC ', 0
TEXT_5B: DB '5.5 SEC ', 0
TEXT_4B: DB '4.5 SEC ', 0
TEXT_3B: DB '3.5 SEC ', 0
TEXT_2B: DB '2.5 SEC ', 0
TEXT_1B: DB '1.5 SEC ', 0
TEXT_0B: DB '0.5 SEC ', 0


END

